{"version":3,"sources":["Component/OrderList/index.module.css","Component/OrderList/OrderExpand.module.css","Oauth/index.js","Component/Dashboard/index.js","Component/UserList/index.js","Component/OrderList/OrderExpand.js","Component/OrderList/index.js","Component/NotFound/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","type","params","console","log","AUTH_LOGIN","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","access_token","localStorage","setItem","AUTH_LOGOUT","token","getItem","removeItem","Promise","resolve","AUTH_ERROR","reject","AUTH_CHECK","Card","CardHeader","title","CardContent","UserList","props","List","Datagrid","rowClick","TextField","source","EmailField","UrlField","theme","createMuiTheme","typography","OrderExpand","Show","SimpleShowLayout","Grid","container","spacing","className","classes","font","item","xs","Typography","component","Box","boxtitle","fontSize","m","record","gamename","gametype","ip","donetime","paytype","handlingfee","remark","OrderFilter","Filter","btn","TextInput","label","alwaysOn","DateInput","SelectInput","choices","id","name","OrderList","filters","options","expand","textAlign","pink","FunctionField","headerClassName","center","render","borderRadius","bgcomplete","p","align","bgred","bgbutiful","dataProvider","simpleRestProvider","url","Accept","set","fetchUtils","fetchJson","createHistory","palette","overrides","MuiButton","textPrimary","color","root","MuiCardContent","background","App","Admin","authProvider","AuthProvider","catchAll","NotFound","Resource","list","Dashboard","icon","DashboardIcon","PaymentIcon","StorageIcon","AccountBalanceIcon","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,KAAO,wBAAwB,WAAa,8BAA8B,MAAQ,yBAAyB,UAAY,6BAA6B,IAAM,yB,+ECA/MD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,KAAO,4B,2ICEpF,WAACC,EAAMC,GAGlB,GAFAC,QAAQC,IAAIH,GAERA,IAASI,IAAY,CAAC,IACdC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SACZC,EAAU,IAAIC,QAAQ,aAAc,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEP,WAAUC,aACjCO,QAAS,IAAIC,QAAQ,CAAE,eAAgB,uBAE3C,OAAOC,MAAMR,GACRS,MAAK,SAAAC,GACF,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAE5C,MADAhB,QAAQC,IAAIc,GACN,IAAIE,MAAMF,EAASG,YAE7B,OAAOH,EAASI,UAEnBL,MAAK,YAAuB,IAApBM,EAAmB,EAAnBA,aACLC,aAAaC,QAAQ,QAASF,MAI1C,GAAItB,IAASyB,IAAa,CACtB,IAAMC,EAAQH,aAAaI,QAAQ,SACnCJ,aAAaK,WAAW,SACxB,IAAMrB,EAAU,IAAIC,QAAQ,cAAe,CACvCC,OAAQ,OACRI,QAAS,CACL,cAAgB,UAAhB,OAA2Ba,MAGnC,OAAOX,MAAMR,GACRS,MAAK,SAAAC,GACF,OAAOY,QAAQC,aAI3B,GAAI9B,IAAS+B,IAAY,CACrB,IAAMb,EAASjB,EAAOiB,OACtB,OAAe,MAAXA,GAA6B,MAAXA,GAA6B,MAAXA,GACpCK,aAAaK,WAAW,SACjBC,QAAQG,UAEZH,QAAQC,UAGnB,GAAI9B,IAASiC,IAAY,CACrB,IAAMP,EAAQH,aAAaI,QAAQ,SAC7BpB,EAAU,IAAIC,QAAQ,YAAa,CACrCC,OAAQ,MACRI,QAAS,CACL,cAAgB,UAAhB,OAA2Ba,MAGnC,OAAOX,MAAMR,GACRS,MAAK,SAAAC,GACF,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,OAAOK,aAAaK,WAAW,YAEpCZ,MAAK,WACJ,OAAOO,aAAaI,QAAQ,SAAWE,QAAQC,UAAYD,QAAQG,YAK/E,OAAOH,QAAQC,W,2BChEJ,oBACX,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,kCAClB,kBAACC,EAAA,EAAD,wC,6CCLKC,EAAW,SAAAC,GAAK,OAC3B,kBAACC,EAAA,EAASD,EACR,kBAACE,EAAA,EAAD,CAAUC,SAAS,QACjB,kBAACC,EAAA,EAAD,CAAWC,OAAO,OAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACC,EAAA,EAAD,CAAYD,OAAO,UAEnB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACE,EAAA,EAAD,CAAUF,OAAO,YACjB,kBAACD,EAAA,EAAD,CAAWC,OAAO,oB,6HCLlBG,EAAQC,YAAe,CACzBC,WAAY,CACR,WAAc,6BACd,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,OAqFbC,EAjFK,SAAAX,GAAK,OACrB,kBAACY,EAAA,EAASZ,EACN,kBAACa,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkBL,MAAOA,GACrB,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWC,IAAQC,MAC3C,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,4BAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOC,YAI1B,kBAACf,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,sBAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOE,YAI1B,kBAAChB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,kBAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOG,MAI1B,kBAACjB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,4BAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOI,YAI1B,kBAAClB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,4BAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOK,WAI1B,kBAACnB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,sBAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOM,eAI1B,kBAACpB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAClB,kBAACC,EAAA,EAAD,CAAKP,UAAWC,IAAQO,SAAUC,SAAS,WAAWC,EAAG,GAAzD,4BAGA,kBAACH,EAAA,EAAD,CAAKE,SAAU,GAAIC,EAAG,GACjB3B,EAAM4B,OAAOO,e,kBC9DxCC,EAAc,SAACpC,GAAD,OAChB,kBAACqC,EAAA,EAAD,iBAAYrC,EAAZ,CAAmBiB,UAAWC,IAAQoB,MAClC,kBAACC,EAAA,EAAD,CAAWC,MAAM,iCAAQnC,OAAO,UAAUoC,UAAQ,IAClD,kBAACF,EAAA,EAAD,CAAWC,MAAM,6BAASnC,OAAO,SAASoC,UAAQ,IAClD,kBAACF,EAAA,EAAD,CAAWC,MAAM,uCAASnC,OAAO,WAAWoC,UAAQ,IACpD,kBAACC,EAAA,EAAD,CAAWF,MAAM,uCAASnC,OAAO,eACjC,kBAACkC,EAAA,EAAD,CAAWC,MAAM,6BAASnC,OAAO,OACjC,kBAACqC,EAAA,EAAD,CAAWF,MAAM,2BAAOnC,OAAO,aAC/B,kBAACsC,EAAA,EAAD,CAAaH,MAAM,2BAAOnC,OAAO,SAASuC,QAAS,CAC/C,CAAEC,GAAI,UAAWC,KAAM,sBACvB,CAAED,GAAI,UAAWC,KAAM,sBACvB,CAAED,GAAI,OAAQC,KAAM,2BAKnBC,EAAY,SAAA/C,GAAK,OAC1B,kBAACC,EAAA,EAAD,iBAAUD,EAAV,CAAiBgD,QAAS,kBAAC,EAAD,MAAiBnD,MAAOG,EAAMiD,QAAQT,QAC5D,kBAACtC,EAAA,EAAD,CAAUC,SAAS,SAAS+C,OAAQ,kBAAC,EAAD,OAChC,kBAAC9C,EAAA,EAAD,CAAWoC,MAAM,KAAKnC,OAAO,OAC7B,kBAACD,EAAA,EAAD,CAAWoC,MAAM,qBAAMnC,OAAO,YAC9B,kBAACD,EAAA,EAAD,CAAWoC,MAAM,2BAAOW,UAAU,QAAQlC,UAAWC,IAAQkC,KAAM/C,OAAO,WAC1E,kBAACD,EAAA,EAAD,CAAWoC,MAAM,2BAAOW,UAAU,QAAQ9C,OAAO,SACjD,kBAACD,EAAA,EAAD,CAAWoC,MAAM,iBAAOnC,OAAO,WAC/B,kBAACD,EAAA,EAAD,CAAWoC,MAAM,2BAAOW,UAAU,QAAQ9C,OAAO,eACjD,kBAACgD,EAAA,EAAD,CAAeb,MAAM,2BAAOc,gBAAiBpC,IAAQqC,OAAQC,OAAQ,SAAA5B,GACjE,MAAsB,YAAlBA,EAAOjD,OACA,kBAAC6C,EAAA,EAAD,CAAKiC,aAAc,GAAIxC,UAAWC,IAAQwC,WAAYC,EAAG,GAAKhC,EAAG,EAAGiC,MAAM,UAA1E,uBACkB,SAAlBhC,EAAOjD,OACP,kBAAC6C,EAAA,EAAD,CAAKiC,aAAc,GAAIxC,UAAWC,IAAQ2C,MAAOF,EAAG,GAAKhC,EAAG,EAAGiC,MAAM,UAArE,sBACkB,YAAlBhC,EAAOjD,OACP,kBAAC6C,EAAA,EAAD,CAAKiC,aAAc,GAAIxC,UAAWC,IAAQ4C,UAAWH,EAAG,GAAKhC,EAAG,EAAGiC,MAAM,UAAzE,2BADJ,QCpDR,oBACX,kBAACjE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,0C,wECsBFiE,EAAeC,YAAmB,QARrB,SAACC,GAAuB,IAAlBhB,EAAiB,uDAAP,GAC5BA,EAAQ3E,UACX2E,EAAQ3E,QAAU,IAAIC,QAAQ,CAAE2F,OAAQ,sBAE1C,IAAM/E,EAAQH,aAAaI,QAAQ,SAEnC,OADA6D,EAAQ3E,QAAQ6F,IAAI,gBAApB,iBAA+ChF,IACxCiF,IAAWC,UAAUJ,EAAKhB,MAM7BzC,IADU8D,cACF7D,YAAe,CAC3BC,WAAY,CACV,WAAc,6BACd,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,KAEtB6D,QAAS,CACP9G,KAAM,QAER+G,UAAW,CACTC,UAAW,CACTC,YAAa,CACXC,MAAO,WAETC,KAAM,CACJD,MAAO,UAGXE,eAAgB,CACdD,KAAM,CACJE,WAAY,gBAcLC,GATH,kBACV,kBAACC,EAAA,EAAD,CAAOxE,MAAOA,GAAOX,MAAM,iBAAiBoF,aAAcC,EAAcnB,aAAcA,EAAcoB,SAAUC,GAC5G,kBAACC,EAAA,EAAD,CAAUvC,KAAK,YAAYG,QAAS,CAAET,MAAO,aAAe8C,KAAMC,EAAWC,KAAMC,MACnF,kBAACJ,EAAA,EAAD,CAAUvC,KAAK,QAAQG,QAAS,CAAET,MAAO,wCAAY8C,KAAMvC,EAAWyC,KAAME,MAC5E,kBAACL,EAAA,EAAD,CAAUvC,KAAK,eAAeG,QAAS,CAAET,MAAO,kCAAW8C,KAAMvF,EAAUyF,KAAMG,MACjF,kBAACN,EAAA,EAAD,CAAUvC,KAAK,eAAeG,QAAS,CAAET,MAAO,wCAAY8C,KAAMvF,EAAUyF,KAAMI,QCtDlEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS1C,OAAO,kBAAC,GAAD,MAAS2C,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9H,MAAK,SAAA+H,GACjCA,EAAaC,kB","file":"static/js/main.7ed74d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"OrderList_center__1ZCTH\",\"pink\":\"OrderList_pink__1WoE9\",\"bgcomplete\":\"OrderList_bgcomplete__2sCcw\",\"bgred\":\"OrderList_bgred__37BDs\",\"bgbutiful\":\"OrderList_bgbutiful__2AgxE\",\"btn\":\"OrderList_btn__aSOK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OrderExpand_root__2KUks\",\"boxtitle\":\"OrderExpand_boxtitle__1k1qU\",\"font\":\"OrderExpand_font__33ZaW\"};","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default (type, params) => {\r\n    console.log(type);\r\n\r\n    if (type === AUTH_LOGIN) {\r\n        const { username, password } = params;\r\n        const request = new Request('/api/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        })\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    console.log(response);\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ access_token }) => {\r\n                localStorage.setItem('token', access_token);\r\n            });\r\n    }\r\n\r\n    if (type === AUTH_LOGOUT) {\r\n        const token = localStorage.getItem('token');\r\n        localStorage.removeItem('token');\r\n        const request = new Request('/api/logout', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n        return fetch(request)\r\n            .then(response => {\r\n                return Promise.resolve();\r\n            });\r\n    }\r\n\r\n    if (type === AUTH_ERROR) {\r\n        const status = params.status;\r\n        if (status === 401 || status === 403 || status === 500) {\r\n            localStorage.removeItem('token');\r\n            return Promise.reject();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    if (type === AUTH_CHECK) {\r\n        const token = localStorage.getItem('token');\r\n        const request = new Request('/api/user', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    return localStorage.removeItem('token');\r\n                }\r\n            }).then(() => {\r\n                return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\r\n            });\r\n\r\n    }\r\n\r\n    return Promise.resolve();\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport default () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField, UrlField } from \"react-admin\";\r\n\r\nexport const UserList = props => (\r\n  <List {...props}>\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"name\" />\r\n      <TextField source=\"username\" />\r\n      <EmailField source=\"email\" />\r\n      {/* <TextField source=\"address.street\" /> */}\r\n      <TextField source=\"phone\" />\r\n      <UrlField source=\"website\" />\r\n      <TextField source=\"company.name\" />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n","import React from \"react\";\r\nimport { Show, SimpleShowLayout } from \"react-admin\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport classes from './OrderExpand.module.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        \"fontFamily\": \"\\\"Noto Sans TC\\\", sans-serif\",\r\n        \"fontSize\": 14,\r\n        \"fontWeightLight\": 300,\r\n        \"fontWeightRegular\": 400,\r\n        \"fontWeightMedium\": 500\r\n    },\r\n});\r\n\r\nconst OrderExpand = props => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <MuiThemeProvider theme={theme}>\r\n                <Grid container spacing={2} className={classes.font}>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                玩家暱稱\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.gamename}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                服務器\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.gametype}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                玩家ip\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.ip}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                到帳時間\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.donetime}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                付款方式\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.paytype}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                手續費\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.handlingfee}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography component=\"div\" >\r\n                            <Box className={classes.boxtitle} fontSize=\"fontSize\" m={1}>\r\n                                訂單備註\r\n                        </Box>\r\n                            <Box fontSize={16} m={1}>\r\n                                {props.record.remark}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport default OrderExpand;","import React from \"react\";\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    FunctionField,\r\n    // Edit,\r\n    // SimpleForm,\r\n    // DisabledInput,\r\n    // ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    // LongTextInput,\r\n    // Create,\r\n    Filter,\r\n    DateInput\r\n} from \"react-admin\";\r\nimport OrderExpand from \"./OrderExpand\";\r\nimport Box from '@material-ui/core/Box';\r\nimport classes from './index.module.css';\r\n\r\n\r\n\r\n// const OrderTitle = ({ record }) => {\r\n//     return <span>{record ? `${record.title}` : ''}</span>;\r\n// };\r\n\r\nconst OrderFilter = (props) => (\r\n    <Filter {...props} className={classes.btn}>\r\n        <TextInput label=\"搜尋訂單號\" source=\"orderno\" alwaysOn />\r\n        <TextInput label=\"搜尋玩家ID\" source=\"gameid\" alwaysOn />\r\n        <TextInput label=\"搜尋玩家暱稱\" source=\"gamename\" alwaysOn />\r\n        <DateInput label=\"搜尋發起時間\" source=\"created_at\" />\r\n        <TextInput label=\"搜尋玩家ip\" source=\"ip\" />\r\n        <DateInput label=\"到帳時間\" source=\"donetime\" />\r\n        <SelectInput label=\"訂單狀態\" source=\"status\" choices={[\r\n            { id: 'success', name: '已完成' },\r\n            { id: 'working', name: '處理中' },\r\n            { id: 'fail', name: '已失敗' },\r\n        ]} />\r\n    </Filter>\r\n);\r\n\r\nexport const OrderList = props => (\r\n    <List {...props} filters={<OrderFilter />} title={props.options.label}>\r\n        <Datagrid rowClick=\"expand\" expand={<OrderExpand />}>\r\n            <TextField label=\"ID\" source=\"id\" />\r\n            <TextField label=\"訂單號\" source=\"orderno\" />\r\n            <TextField label=\"單筆金額\" textAlign=\"right\" className={classes.pink} source=\"amount\" />\r\n            <TextField label=\"充值比值\" textAlign=\"right\" source=\"rate\" />\r\n            <TextField label=\"玩家ID\" source=\"gameid\" />\r\n            <TextField label=\"發起時間\" textAlign=\"right\" source=\"created_at\" />\r\n            <FunctionField label=\"訂單狀態\" headerClassName={classes.center} render={record => {\r\n                if (record.status === 'success') {\r\n                    return <Box borderRadius={10} className={classes.bgcomplete} p={0.5} m={1} align='center'> 已完成</Box >;\r\n                } else if (record.status === 'fail') {\r\n                    return <Box borderRadius={10} className={classes.bgred} p={0.5} m={1} align='center'>已失敗</Box >;\r\n                } else if (record.status === 'working') {\r\n                    return <Box borderRadius={10} className={classes.bgbutiful} p={0.5} m={1} align='center'>處理中</Box >;\r\n                }\r\n            }} />\r\n        </Datagrid >\r\n    </List >\r\n);\r\n\r\n// export const OrderEdit = props => (\r\n//     <Edit title={<OrderTitle />} {...props}>\r\n//         <SimpleForm>\r\n//             <DisabledInput source=\"id\" />\r\n//             <ReferenceInput source=\"userId\" reference=\"users\">\r\n//                 <SelectInput optionText=\"name\" />\r\n//             </ReferenceInput>\r\n//             <TextInput source=\"title\" />\r\n//             <LongTextInput source=\"body\" />\r\n//         </SimpleForm>\r\n//     </Edit>\r\n// );\r\n\r\n// export const OrderCreate = props => (\r\n//     <Create {...props}>\r\n//         <SimpleForm>\r\n//             <ReferenceInput source=\"userId\" reference=\"users\">\r\n//                 <SelectInput optionText=\"name\" />\r\n//             </ReferenceInput>\r\n//             <TextInput source=\"title\" />\r\n//             <LongTextInput source=\"body\" />\r\n//         </SimpleForm>\r\n//     </Create>\r\n// );","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport default () => (\r\n    <Card>\r\n        <CardHeader title=\"404 Not Found\" />\r\n        <CardContent>Hey，You are at wrong way!!</CardContent>\r\n    </Card>\r\n);","import React from \"react\";\r\nimport simpleRestProvider from \"ra-data-simple-rest\";\r\nimport { fetchUtils, Admin, Resource } from \"react-admin\";\r\nimport { createBrowserHistory as createHistory } from 'history';\r\n//驗證登入狀態\r\nimport AuthProvider from './Oauth';\r\n//Component\r\nimport Dashboard from './Component/Dashboard';\r\nimport { UserList } from \"./Component/UserList\";\r\nimport { OrderList } from \"./Component/OrderList\";\r\nimport NotFound from './Component/NotFound';\r\n\r\n//theme\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n//icon\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\n// import jsonServerProvider from 'ra-data-json-server';ㄋ\r\n\r\n\r\nconst httpClient = (url, options = {}) => {\r\n  if (!options.headers) {\r\n    options.headers = new Headers({ Accept: 'application/json' });\r\n  }\r\n  const token = localStorage.getItem('token');\r\n  options.headers.set('Authorization', `Bearer ${token}`);\r\n  return fetchUtils.fetchJson(url, options);\r\n}\r\nconst dataProvider = simpleRestProvider('/api', httpClient);\r\n// const dataProvider = jsonServerProvider('http://jsonplaceholder.typicode.com');\r\n\r\nconst history = createHistory();\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    \"fontFamily\": \"\\\"Noto Sans TC\\\", sans-serif\",\r\n    \"fontSize\": 14,\r\n    \"fontWeightLight\": 300,\r\n    \"fontWeightRegular\": 400,\r\n    \"fontWeightMedium\": 500\r\n  },\r\n  palette: {\r\n    type: 'dark', // Switching the dark mode on is a single property value change.\r\n  },\r\n  overrides: {\r\n    MuiButton: { // override the styles of all instances of this component\r\n      textPrimary: {\r\n        color: '#f50057',\r\n      },\r\n      root: { // Name of the rule\r\n        color: 'white', // Some CSS\r\n      },\r\n    },\r\n    MuiCardContent: {\r\n      root: {\r\n        background: '#383838',\r\n      }\r\n    }\r\n  },\r\n});\r\nconst App = () => (\r\n  <Admin theme={theme} title=\"Payment System\" authProvider={AuthProvider} dataProvider={dataProvider} catchAll={NotFound} >\r\n    <Resource name=\"dashboard\" options={{ label: 'Dashboard' }} list={Dashboard} icon={DashboardIcon} />\r\n    <Resource name=\"order\" options={{ label: '贊助訂單紀錄' }} list={OrderList} icon={PaymentIcon} />\r\n    <Resource name=\"v1/sqlconfig\" options={{ label: '資料庫設定' }} list={UserList} icon={StorageIcon} />\r\n    <Resource name=\"v1/payconfig\" options={{ label: '綠界金流設定' }} list={UserList} icon={AccountBalanceIcon} />\r\n  </Admin>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}